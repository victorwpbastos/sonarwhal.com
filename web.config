<?xml version="1.0" encoding="utf-8"?>
<!--
     This configuration file is required if iisnode is used to run node processes behind
     IIS or IIS Express.  For more information, visit:

     https://github.com/tjanczuk/iisnode/blob/master/src/samples/configuration/web.config
-->

<configuration>
    <system.webServer>
        <httpProtocol>
            <customHeaders>
                <remove name="X-Powered-By"/>
                <remove name="server"/>
                <add name="x-dns-prefetch-control" value="on"/>
                <add name="X-Content-Type-Options" value="nosniff"/>
                <add name="Strict-Transport-Security" value="max-age=31536000"/>
            </customHeaders>
        </httpProtocol>
        <!-- Visit http://blogs.msdn.com/b/windowsazure/archive/2013/11/14/introduction-to-websockets-on-windows-azure-web-sites.aspx for more information on WebSocket support -->
        <webSocket enabled="false"/>
        <handlers>
            <!-- Indicates that the app.js file is a node.js site to be handled by the iisnode module -->
            <add name="iisnode" path="src/server/index.js" verb="*" modules="iisnode"/>
        </handlers>
        <rewrite>
            <outboundRules>
                <rule name="X-UA-Compatible header">
                    <match serverVariable="RESPONSE_X_UA_Compatible" pattern=".*" />
                    <conditions>
                        <add input="{RESPONSE_CONTENT_TYPE}" pattern="^text/html" />
                    </conditions>
                    <action type="Rewrite" value="ie=edge"/>
                </rule>
            </outboundRules>
            <rules>
                <rule name="Redirect to https" stopProcessing="true">
                    <match url="(.*)"/>
                    <conditions>
                        <add input="{HTTPS}" pattern="off" ignoreCase="true"/>
                        <add input="{WARMUP_REQUEST}" pattern="1" negate="true" />
                        <add input="{REQUEST_URI}" pattern="/api/version/" negate="true" />
                    </conditions>
                    <action type="Redirect" url="https://{HTTP_HOST}{REQUEST_URI}" redirectType="Permanent"
                        appendQueryString="true"/>
                </rule>
                <rule name="Redirect to non www" stopProcessing="true">
                    <match url="(.*)"/>
                    <conditions>
                         <add input="{HTTP_HOST}" pattern="^www.sonarwhal.com$" />
                    </conditions>
                    <action type="Redirect" url="https://sonarwhal.com{REQUEST_URI}" redirectType="Permanent"
                        appendQueryString="true"/>
                </rule>
                <rule name="Redirect to JSF CoC" stopProcessing="true">
                    <match url="(.*)"/>
                    <conditions>
                         <add input="{REQUEST_URI}" pattern="/about/code_of_conduct/" />
                    </conditions>
                    <action type="Redirect" url="https://js.foundation/community/code-of-conduct" redirectType="Permanent"
                        appendQueryString="true"/>
                </rule>
                <rule name="wellknown" stopProcessing="true">
                    <match url="^\.well-known.*" />
                    <action type="Rewrite" url="{REQUEST_URI}"/>
                </rule>
                <rule name="static">
                    <match url="(?!scanner|search).*$" ignoreCase="true"/>
                    <action type="Rewrite" url="dist{REQUEST_URI}"/>
                </rule>
                <rule name="ScannerAndSearch" stopProcessing="true">
                    <match url="(?:scanner|search)(.*)$" ignoreCase="true"/>
                    <conditions>
                        <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="True"/>
                    </conditions>
                    <action type="Rewrite" url="src/server/index.js"/>
                </rule>
            </rules>
            <!-- http://stackoverflow.com/a/29596691 -->
            <!-- <outboundRules>
                <rule name="Rewrite SVGZ header" preCondition="IsSVGZ" stopProcessing="true">
                    <match serverVariable="RESPONSE_Content_Encoding" pattern=".*" />
                    <action type="Rewrite" value="gzip" />
                </rule>
                <preConditions>
                    <preCondition name="IsSVGZ">
                        <add input="{PATH_INFO}" pattern="\.svgz$" />
                    </preCondition>
                </preConditions>
            </outboundRules> -->
        </rewrite>

        <!-- 'bin' directory has no special meaning in node.js and apps can be placed in it -->
        <security>
            <requestFiltering removeServerHeader="true">
                <hiddenSegments>
                    <remove segment="src"/>
                </hiddenSegments>
                <requestLimits maxQueryString="4096"/>
            </requestFiltering>
        </security>

        <httpErrors errorMode="Custom" defaultResponseMode="ExecuteURL">
            <remove statusCode="404" subStatusCode="-1"/>
            <error statusCode="404" path="/dist/404/" responseMode="ExecuteURL"/>
        </httpErrors>

        <iisnode watchedFiles="web.config;*.js" debuggingEnabled="false"/>

        <!--
          You can control how Node is hosted within IIS using the following options:
            * watchedFiles: semi-colon separated list of files that will be watched for changes to restart the server
            * node_env: will be propagated to node as NODE_ENV environment variable
            * debuggingEnabled - controls whether the built-in debugger is enabled

          See https://github.com/tjanczuk/iisnode/blob/master/src/samples/configuration/web.config for a full list of options
        -->
        <!-- <iisnode watchedFiles="web.config;*.js"/> -->
        <staticContent>
            <remove fileExtension=".css"/>
            <mimeMap fileExtension=".css" mimeType="text/css; charset=utf-8"/>
            <remove fileExtension=".html" />
            <mimeMap fileExtension=".html" mimeType="text/html; charset=utf-8" />
            <remove fileExtension=".js"/>
            <mimeMap fileExtension=".js" mimeType="text/javascript; charset=utf-8"/>
            <remove fileExtension=".json"/>
            <mimeMap fileExtension=".json" mimeType="application/json; charset=utf-8"/>
            <remove fileExtension=".svg"/>
            <mimeMap fileExtension=".svg" mimeType="image/svg+xml; charset=utf-8"/>
            <remove fileExtension=".svgz"/>
            <mimeMap fileExtension=".svgz" mimeType="image/svg+xml"/>
            <remove fileExtension=".ttf"/>
            <mimeMap fileExtension=".ttf" mimeType="font/ttf"/>
            <remove fileExtension=".woff"/>
            <mimeMap fileExtension=".woff" mimeType="font/woff"/>
            <remove fileExtension=".woff2"/>
            <mimeMap fileExtension=".woff2" mimeType="font/woff2"/>
            <remove fileExtension=".xml"/>
            <mimeMap fileExtension=".xml" mimeType="application/xml; charset=utf-8"/>
            <remove fileExtension=".webmanifest"/>
            <mimeMap fileExtension="webmanifest" mimeType="application/manifest+json; charset=utf-8"/>
        </staticContent>
    </system.webServer>
    <system.web>
        <customErrors mode="RemoteOnly" defaultRedirect="/dist/404/" redirectMode="ResponseRewrite"/>
    </system.web>
</configuration>
